[{"/home/amaan/fract project/todolist/todo/src/index.js":"1","/home/amaan/fract project/todolist/todo/src/App.js":"2","/home/amaan/fract project/todolist/todo/src/reportWebVitals.js":"3","/home/amaan/fract project/todolist/todo/src/Pages/Home/Home.js":"4","/home/amaan/fract project/todolist/todo/src/Components/navbar/navbar.js":"5","/home/amaan/fract project/todolist/todo/src/Components/Items/items.js":"6","/home/amaan/fract project/todolist/todo/src/Components/InputComp/InputComp.js":"7","/home/amaan/fract project/todolist/todo/src/Pages/bucket/bucket.js":"8","/home/amaan/fract project/todolist/todo/src/Actions/homedata.js":"9","/home/amaan/fract project/todolist/todo/src/Actions/bucket.js":"10"},{"size":858,"mtime":1610291138326,"results":"11","hashOfConfig":"12"},{"size":528,"mtime":1610178247679,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1610178247683,"results":"14","hashOfConfig":"12"},{"size":3519,"mtime":1610367953725,"results":"15","hashOfConfig":"12"},{"size":702,"mtime":1610291168978,"results":"16","hashOfConfig":"12"},{"size":3749,"mtime":1610377527341,"results":"17","hashOfConfig":"12"},{"size":3748,"mtime":1610290884296,"results":"18","hashOfConfig":"12"},{"size":2339,"mtime":1610378831557,"results":"19","hashOfConfig":"12"},{"size":1405,"mtime":1610371273439,"results":"20","hashOfConfig":"12"},{"size":706,"mtime":1610378252248,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"vxkkry",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/amaan/fract project/todolist/todo/src/index.js",[],["47","48"],"/home/amaan/fract project/todolist/todo/src/App.js",[],["49","50"],"/home/amaan/fract project/todolist/todo/src/reportWebVitals.js",[],"/home/amaan/fract project/todolist/todo/src/Pages/Home/Home.js",["51","52","53","54"],"import React, { Component } from \"react\";\nimport NavBar from '../../Components/navbar/navbar';\nimport Items from '../../Components/Items/items';\nimport InputComp from '../../Components/InputComp/InputComp';\n// importing the components from react Bootstrap\nimport { Container,ListGroup } from 'react-bootstrap';\nimport { getHomePageData,insertList ,deletItem,updateItem} from '../../Actions/homedata'\n// import css\nimport './Home.css'\n\n\n\nclass Home extends Component {\n    constructor() {\n        super();\n        this.state = {\n            items: [],\n            taskInput: \"\",\n\n        }\n    }\n   async  componentDidMount() {\n        let homedata = await getHomePageData();\n        this.setState({\n            items:homedata\n        })\n    }\n    //add the items to the to do list \n    addTask = async (userInput,selectedBucket,type) => {\n        if(selectedBucket == '') {\n            return\n        }\n        let resp = await insertList(userInput,selectedBucket,type);\n        console.log(resp);\n        if(resp.status) {\n        let items = this.state.items\n        items.push({ description: userInput, isChecked: false, bucketName:selectedBucket,id:resp.id})\n        this.setState({ items: items })\n        }\n    }\n\n    //delete items\n    deleteItems = async (itemId)=>{\n        let resp = await deletItem(itemId);\n        console.log(resp)\n        if(resp.status) {\n            let items_array = this.state.items\n            let itemindex = \"\";\n            items_array = items_array.filter((data,index)=>{\n                if(data.id != itemId) {\n                    return true\n                }\n                return false\n            })\n            this.setState({ items: items_array })\n        }\n    }\n    updateItems = async(userInput,isChecked,itemId)=>{\n        console.log(userInput,isChecked,itemId);\n        let resp = await updateItem(userInput,isChecked,itemId);\n    }\n\n    render() {\n        return (\n            <div>\n                {/* common navbar component */}\n                <NavBar />\n                <div>\n                    <Container>\n                        <div className=\"todolist todolist--alignment\">\n                            <div className=\"todolistInput\">\n                                <InputComp\n                                    type=\"todolist\"\n                                    Bucket={this.selectBucket}\n                                    addTask={this.addTask}\n                                />\n                            </div>\n                            <div className=\"todolistGroup\">\n                                <ListGroup>\n                                    {\n                                        this.state.items.map((item,index) => {\n                                            return (\n                                                <Items \n                                                key={item.id} \n                                                type=\"todolist\" item={item} \n                                                deleteItems = {this.deleteItems}\n                                                updateItems={this.updateItems}\n                                                />\n                                            )\n                                        })\n                                    }\n                                </ListGroup>\n                            </div>\n                        </div>\n                    </Container>\n\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default Home;","/home/amaan/fract project/todolist/todo/src/Components/navbar/navbar.js",["55","56","57","58"],"import React from 'react';\nimport { Navbar,Nav,NavDropdown,Form,FormControl,Button } from 'react-bootstrap';\n\n\nconst NavBar = ()=>{\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <Navbar.Brand href=\"#home\">TO-DO LIST</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"/\">Home</Nav.Link>\n                    <Nav.Link href=\"bucket\">Buckets</Nav.Link>\n                    <Nav.Link href=\"about\">About</Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default NavBar;","/home/amaan/fract project/todolist/todo/src/Components/Items/items.js",["59","60","61","62","63","64","65"],"/home/amaan/fract project/todolist/todo/src/Components/InputComp/InputComp.js",["66","67","68","69","70","71","72","73"],"import React, { Component } from \"react\";\nimport { Container, Row, Col, ListGroup, ListGroupItem, InputGroup, FormControl, Button, Form, Badge } from 'react-bootstrap';\n\nclass InputComp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userInput:\"\",\n            type:'todolist',\n            selectedBucket:\"\"\n        }\n    }\n    componentDidMount() {\n        this.setState({\n            type:this.props.type\n        })\n    }\n\n    //update the filed on change\n    updateUserInput = (data) => {\n        this.setState({ userInput: data })\n    }\n\n    //select the bucket\n    selectBucket = (data) => {\n        this.setState({ selectedBucket: data })\n        console.log(data)\n    }\n    render() {\n        return (\n            <Form.Row>\n                {this.state.type != 'bucket' ?\n                    <>\n                        <Form.Group as={Col} md=\"8\" controlId=\"validationCustom01\">\n                            <Form.Label>Add Items</Form.Label>\n                            <Form.Control\n                                required\n                                select\n                                type=\"text\"\n                                placeholder=\"add items to the list\"\n                                onChange={(event) => {\n                                    this.updateUserInput(event.target.value)\n                                }}\n                            />\n                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"3\" controlId=\"exampleForm.ControlSelect1\">\n                            <Form.Label>select Bucket</Form.Label>\n                            <Form.Control as=\"select\" onChange={(event) => {\n                                this.selectBucket(event.target.value)\n                            }}>\n                                <option>1</option>\n                                <option>2</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"2\">\n                            <Button variant=\"primary\" onClick={() => { this.props.addTask(\n                                this.state.userInput,\n                                this.state.selectedBucket,\n                                this.state.type\n                            ) }}>Add Items</Button>\n                        </Form.Group>\n                    </>\n                    :\n                    <>\n                        <Form.Group as={Col} md=\"9\" controlId=\"validationCustom01\">\n                            <Form.Label>Add Buckets</Form.Label>\n                            <Form.Control\n                                required\n                                select\n                                type=\"text\"\n                                placeholder=\"Add buckets\"\n                                onChange={(event) => {\n                                    this.updateUserInput(event.target.value)\n                                }}\n                            />\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"3\">\n                            <Form.Label>Add Bucket</Form.Label>\n                            <div>\n                                <Button variant=\"primary\" onClick={() => { this.props.addBucket(\n                                    this.state.userInput,\n                                    this.state.type\n                                ) }}>Submit</Button>\n                            </div>\n                        </Form.Group>\n                    </>\n                }\n            </Form.Row>\n        )\n    }\n}\n\nexport default InputComp;","/home/amaan/fract project/todolist/todo/src/Pages/bucket/bucket.js",[],"/home/amaan/fract project/todolist/todo/src/Actions/homedata.js",[],"/home/amaan/fract project/todolist/todo/src/Actions/bucket.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"78"},{"ruleId":"76","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":30,"column":27,"nodeType":"82","messageId":"83","endLine":30,"endColumn":29},{"ruleId":"84","severity":1,"message":"85","line":48,"column":17,"nodeType":"86","messageId":"87","endLine":48,"endColumn":26},{"ruleId":"80","severity":1,"message":"88","line":50,"column":28,"nodeType":"82","messageId":"83","endLine":50,"endColumn":30},{"ruleId":"84","severity":1,"message":"89","line":60,"column":13,"nodeType":"86","messageId":"87","endLine":60,"endColumn":17},{"ruleId":"84","severity":1,"message":"90","line":2,"column":21,"nodeType":"86","messageId":"87","endLine":2,"endColumn":32},{"ruleId":"84","severity":1,"message":"91","line":2,"column":33,"nodeType":"86","messageId":"87","endLine":2,"endColumn":37},{"ruleId":"84","severity":1,"message":"92","line":2,"column":38,"nodeType":"86","messageId":"87","endLine":2,"endColumn":49},{"ruleId":"84","severity":1,"message":"93","line":2,"column":50,"nodeType":"86","messageId":"87","endLine":2,"endColumn":56},{"ruleId":"84","severity":1,"message":"94","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":19},{"ruleId":"84","severity":1,"message":"95","line":2,"column":42,"nodeType":"86","messageId":"87","endLine":2,"endColumn":55},{"ruleId":"84","severity":1,"message":"96","line":2,"column":57,"nodeType":"86","messageId":"87","endLine":2,"endColumn":67},{"ruleId":"84","severity":1,"message":"92","line":2,"column":69,"nodeType":"86","messageId":"87","endLine":2,"endColumn":80},{"ruleId":"84","severity":1,"message":"93","line":2,"column":82,"nodeType":"86","messageId":"87","endLine":2,"endColumn":88},{"ruleId":"80","severity":1,"message":"81","line":72,"column":46,"nodeType":"82","messageId":"83","endLine":72,"endColumn":48},{"ruleId":"80","severity":1,"message":"81","line":75,"column":67,"nodeType":"82","messageId":"83","endLine":75,"endColumn":69},{"ruleId":"84","severity":1,"message":"94","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":19},{"ruleId":"84","severity":1,"message":"97","line":2,"column":21,"nodeType":"86","messageId":"87","endLine":2,"endColumn":24},{"ruleId":"84","severity":1,"message":"98","line":2,"column":31,"nodeType":"86","messageId":"87","endLine":2,"endColumn":40},{"ruleId":"84","severity":1,"message":"95","line":2,"column":42,"nodeType":"86","messageId":"87","endLine":2,"endColumn":55},{"ruleId":"84","severity":1,"message":"96","line":2,"column":57,"nodeType":"86","messageId":"87","endLine":2,"endColumn":67},{"ruleId":"84","severity":1,"message":"92","line":2,"column":69,"nodeType":"86","messageId":"87","endLine":2,"endColumn":80},{"ruleId":"84","severity":1,"message":"99","line":2,"column":96,"nodeType":"86","messageId":"87","endLine":2,"endColumn":101},{"ruleId":"80","severity":1,"message":"88","line":32,"column":34,"nodeType":"82","messageId":"83","endLine":32,"endColumn":36},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],["100"],["101"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'itemindex' is assigned a value but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.","'resp' is assigned a value but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","'ListGroupItem' is defined but never used.","'InputGroup' is defined but never used.","'Row' is defined but never used.","'ListGroup' is defined but never used.","'Badge' is defined but never used.","no-global-assign","no-unsafe-negation"]